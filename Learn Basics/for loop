Problem statement
The n-th term of Fibonacci series F(n), where F(n) is a function, is calculated using the following formula -

    F(n) = F(n - 1) + F(n - 2), 
    Where, F(1) = 1, F(2) = 1


Provided 'n' you have to find out the n-th Fibonacci Number. Handle edges cases like when 'n' = 1 or 'n' = 2 by using conditionals like if else and return what's expected.

"Indexing is start from 1"
import java.util.*;
public class Solution {


	public static void main(String[] args) {
		
		/* Your class should be named Solution.
	 	* Read input as specified in the question.
	 	* Print output as specified in the question.
		*/
		Scanner sc=new Scanner(System.in);
		 int n=sc.nextInt();
		 if(n==0) System.out.println("0");
		 else if(n==1) System.out.println("1");
		 else{
         int a=0;
		 int b=1;
		 int c=0;
		 for(int i=2;i<=n;i++)
		 {
			  c=a+b;
			 a=b;
			 b=c;
		 }
		 System.out.println(c);
		 }
		
	}

}
